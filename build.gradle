plugins {
    id 'java'
    id 'application'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.26'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'org.beryx.jlink' version '3.0.1'
}

group = 'com.nikosalonen'
version = '0.1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
        resources {
            srcDirs = []
        }
    }
    test {
        java {
            srcDirs = []
        }
    }
}

dependencies {
    // Local helper classes packaged in repository
    implementation files('exe build resources/beadmaker.jar')

    // Processing core and pdf (3.3.7 is compatible with existing imports)
    implementation 'org.processing:core:3.3.7'
    implementation 'org.processing:pdf:3.3.7'

    // Logging (available for future use)
    implementation 'org.slf4j:slf4j-api:2.0.13'
    runtimeOnly 'ch.qos.logback:logback-classic:1.5.6'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

application {
    mainClass = 'beadMaker.BeadMaker'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

// JaCoCo coverage
jacoco {
    toolVersion = '0.8.12'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

// Checkstyle (non-failing for now)
checkstyle {
    toolVersion = '10.17.0'
    config = resources.text.fromFile('config/checkstyle/checkstyle.xml')
}

tasks.withType(Checkstyle).configureEach {
    ignoreFailures = true
}

// SpotBugs (non-failing for now)
spotbugs {
    effort = 'default'
    reportLevel = 'low'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    reports.create('html') {
        required = true
        outputLocation = layout.buildDirectory.file("reports/spotbugs/${name}.html")
        stylesheet = 'fancy'
    }
    ignoreFailures = true
}

// Spotless (not wired into check yet)
spotless {
    java {
        target 'src/**/*.java'
        googleJavaFormat('1.17.0')
    }
}

tasks.jar.configure {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

// Runtime image and installer packaging
jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'BeadMaker'
    }
    // Non-modular project: create merged module automatically
    forceMerge('slf4j', 'logback')

    jpackage {
        // Defaults work cross-platform; customize per OS in CI if needed
        imageName = 'BeadMaker'
        installerName = "BeadMaker-${project.version}"
        appVersion = project.version
        vendor = 'BeadMaker Project'
        // Windows specific options are applied only on Windows runners
        installerOptions = [
            '--win-dir-chooser',
            '--win-menu',
            '--win-shortcut'
        ]
        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            installerType = 'exe'
        }
    }
}



